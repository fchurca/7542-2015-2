@startuml

package Mixins {
class Gauge {
max
min
value
}
abstract class EntityMixin
abstract class ProgressMixin
abstract class HealthMixin
abstract class CargoMixin {
cargoType
}
}

package Entities {
abstract class Entity {
name
position
size
solid
sightRadius
}
class Terrain
class Unit {
speed
orientation
strength
range
}
class Building {
products
current
}
class UnfinishedBuilding
class TownCenter
class Flag
class Resource
class Worker
class King
}

Entity <|-- Building
Entity <|-- Terrain
Entity <|-- Flag
Building <|-- UnfinishedBuilding
Building <|-- TownCenter

Entity <|-- Resource

Entity <|-- Unit
Unit <|-- King
Unit <|-- Worker


Entity o-- Gauge : cooldown

ProgressMixin <|-- Building

EntityMixin <|-- ProgressMixin
ProgressMixin o-- Gauge

EntityMixin <|-- HealthMixin
HealthMixin o-- Gauge

EntityMixin <|-- CargoMixin
CargoMixin o-- Gauge

HealthMixin <|-- Unit
HealthMixin <|-- Building
HealthMixin <|-- Flag

CargoMixin <|-- Resource
CargoMixin <|-- Worker

ProgressMixin <|-- UnfinishedBuilding


package Commands {
abstract class Command
class StopCommand
abstract class PositionalCommand {
position
}
abstract class EntityTypeCommand {
unitType
}
class CreateCommand
class MoveCommand
class BuildCommand
abstract class InteractionCommand
class AttackCommand
class RepairCommand
class GatherCommand
}

Command o-- Entity : subject

Command <|-- StopCommand

EntityTypeCommand <|-- CreateCommand
Command <|-- CreateCommand

PositionalCommand <|-- MoveCommand
Command <|-- MoveCommand

PositionalCommand <|-- BuildCommand
EntityTypeCommand <|-- BuildCommand
Command <|-- BuildCommand

InteractionCommand o-- Entity : object

InteractionCommand <|-- AttackCommand
Command <|-- AttackCommand

InteractionCommand <|-- RepairCommand
Command <|-- RepairCommand

InteractionCommand <|-- GatherCommand
Command <|-- GatherCommand


package Factories {
abstract class EntityFactory {
name
size
solid
sightRadius
}
class TerrainFactory
class UnitFactory {
speed
strength
health
range
}
class BuildingFactory {
health
products
}
class ResourceFactory {
capacity
}
class WorkerFactory {
capacity
}
class KingFactory
class FlagFactory {
health
}
class TownCenterFactory
}

EntityFactory <|-- UnitFactory
EntityFactory <|-- TerrainFactory
EntityFactory <|-- BuildingFactory
EntityFactory <|-- ResourceFactory

TerrainFactory --> Terrain

ResourceFactory --> Resource

UnitFactory <|-- WorkerFactory
WorkerFactory --> Worker
UnitFactory <|-- KingFactory
UnitFactory --> Unit
KingFactory --> King
EntityFactory <|-- FlagFactory
FlagFactory --> Flag
BuildingFactory --> Building
BuildingFactory --> UnfinishedBuilding
BuildingFactory <|-- TownCenterFactory
TownCenterFactory --> TownCenter


package Visitor {
abstract class EntityVisitor
}

Entity --> EntityVisitor
EntityVisitor --> Entity
EntityVisitor --> Unit
EntityVisitor --> Worker
EntityVisitor --> King
EntityVisitor --> Building
EntityVisitor --> UnfinishedBuilding
EntityVisitor --> TownCenter
EntityVisitor --> Flag
EntityVisitor --> Resource
EntityVisitor --> Terrain
@enduml

